﻿
@page "/registroclientes"
@page "/registroclientes/{ClienteID:int}"
@using Tarea2.Shared;
@inject HttpClient httpClient



@code {

    [Parameter]

    public int ClienteID { get; set; }

    public Clientes Cliente { get; set; } = new Clientes();

    public string Mensaje { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        if (ClienteID > 0)
        {
            this.Cliente.ClienteID = ClienteID;
            await Buscar();
        }
    }

    public async Task Buscar()
    {
        var clienteEncontrado = await httpClient.GetFromJsonAsync<Clientes>($"api/Clientes/{Cliente.ClienteID}");
        if (clienteEncontrado != null)
        {
            this.Cliente = clienteEncontrado;
            StateHasChanged();
        }
        else
        {
            Mensaje = "Cliente no encontrado";
        }
    }

    public async Task Guardar()
    {
        using var response = await httpClient.PostAsJsonAsync("api/Clientes", Cliente);
        if (!response.IsSuccessStatusCode)
        {
            Mensaje = response.ReasonPhrase ?? "error";
            return;
        }
        var clienteDevuelto = await response.Content.ReadFromJsonAsync<Clientes>();
        if (clienteDevuelto is not null)
        {
            Cliente = clienteDevuelto;
            StateHasChanged();
        }
    }

    public void Nuevo()
    {
        this.Cliente = new Clientes();
        Mensaje = string.Empty;
    }

    public async Task Eliminar()
    {
        using var response = await httpClient.DeleteAsync($"api/Clientes/{Cliente.ClienteID}");
        if (!response.IsSuccessStatusCode)
        {
            Mensaje = response.ReasonPhrase ?? "error";
            return;
        }
        else
            Nuevo();
    }
}